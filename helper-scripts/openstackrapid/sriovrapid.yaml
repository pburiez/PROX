##
## Copyright (c) 2010-2017 Intel Corporation
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##

heat_template_version: 2016-04-08
description: RAPID stack (Rapid Automated Performance Indication for Dataplane)
parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance
    default: RapidVM
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used
    default: prox_flavor
  key:
    type: string
    label: Key name
    description: Name of key-pair to be used for compute instance
    default: prox
  dataplane_network:
    type: string
    label: Private network name or ID
    description: Network to attach instance to.
    default: dataplane-network
  admin_network:
    type: string
    label: Private network name or ID
    description: Network to attach instance to.
    default: admin_internal_net
  floating_network:
    type: string
    label: Floating network name or ID
    description: Public Network to attach instance to.
    default: admin_floating_net
  availability_zone:
    type: string
    description: The Availability Zone to launch the instance.
    default: nova
  gen_sriov_port:
    type: string
    description: The sriov port to be used by the generator
    default: Port3
  sut_sriov_port:
    type: string
    description: The sriov port to be used by the sut
    default: Port4

resources:
  sut_admin_port:
     type: OS::Neutron::Port
     properties:
       network: {get_param: admin_network}
       security_groups:
         - default
  sut_floating_ip:
     type: OS::Neutron::FloatingIP
     properties:
       floating_network: {get_param: floating_network}
       port_id: {get_resource: sut_admin_port}
  sut:
    type: OS::Nova::Server
    properties:
      availability_zone: { get_param: availability_zone }
      user_data:
        get_file: prox_user_data.sh
      key_name: { get_param: key }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: {get_resource: sut_admin_port}
        - port: {get_param: sut_sriov_port}
  gen_admin_port:
     type: OS::Neutron::Port
     properties:
       network: {get_param: admin_network}
       security_groups:
         - default
  gen_floating_ip:
     type: OS::Neutron::FloatingIP
     properties:
       floating_network: {get_param: floating_network}
       port_id: {get_resource: gen_admin_port}
  gen:
    type: OS::Nova::Server
    properties:
      availability_zone: { get_param: availability_zone }
      user_data:
        get_file: prox_user_data.sh
      key_name: { get_param: key }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: {get_resource: gen_admin_port}
        - port: {get_param: gen_sriov_port}

outputs:
  sut_private_ip:
    description: IP address of the sut admin port
    value: { get_attr: [sut_admin_port, fixed_ips, 0, ip_address] }
  sut_public_ip:
    description: Floating IP address of sut in public network
    value: { get_attr: [ sut_floating_ip, floating_ip_address ] }
  sut_dataplane_ip:
    description: IP address of sut dataplane port
    value: { get_attr: [sut, networks,{get_param: dataplane_network},0] }
  sut_dataplane_mac:
    description: The MAC address of the sut dataplane port
    value: { get_attr: [sut, addresses, {get_param: dataplane_network}] }
  gen_private_ip:
    description: IP address of the gen admin port
    value: { get_attr: [gen_admin_port, fixed_ips, 0, ip_address] }
  gen_public_ip:
    description: Floating IP address of gen in public network
    value: { get_attr: [ gen_floating_ip, floating_ip_address ] }
  gen_dataplane_ip:
    description: IP address of gen dataplane port
    value: { get_attr: [gen, networks,{get_param: dataplane_network},0] }
  gen_dataplane_mac:
    description: The MAC address of the gen dataplane port
    value: { get_attr: [gen, addresses, {get_param: dataplane_network}] }

